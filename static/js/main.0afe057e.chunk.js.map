{"version":3,"sources":["styles/theme.js","components/Header/Header.js","components/Header/index.js","components/Footer/index.js","components/Footer/Footer.js","components/Form/CustomInput.js","components/Form/PhoneNumberInput.js","components/Form/CustomSelect.js","components/Form/DOBField.js","components/Form/PlacesSelect.js","components/Form/RadioButton.js","components/Form/Checkbox.js","pages/HomePage/UserForm.js","pages/HomePage/data/FromDataModal.js","pages/HomePage/HomePage.js","pages/HomePage/index.js","App.js","index.js"],"names":["customTheme","theme","colors","StyledHeader","styled","header","Header","className","href","aria-label","Footer","CustomInput","field","form","touched","errors","required","props","FormControl","isRequired","isInvalid","name","FormLabel","htmlFor","label","Input","type","FormErrorMessage","PhoneNumberInput","setFieldValue","InputGroup","children","onChange","value","target","number","isEmpty","length","hasLenghtGreaterThanTen","isNumeric","isNaN","isValidPhoneNumber","mt","customStyles","container","provided","borderColor","boxShadow","borderRadius","CustomSelect","error","options","onBlur","isMulti","mb","as","styles","undefined","DOBField","Grid","templateColumns","gap","Box","w","day","placeholder","days","isDisabled","months","month","years","year","getSelectOptions","suggestions","map","description","PlacesSelect","state","inputValue","handleChange","setState","this","getInputProps","loading","isClearable","isLoading","onInputChange","React","Component","PlacesAutocomplete","propTypes","PropTypes","bool","string","array","RadioButton","id","pr","Radio","RadioButtonGroup","Flex","CustomCheckbox","Checkbox","CustomCheckboxGroup","event","currentTarget","valueArray","checked","push","splice","indexOf","handleBlur","Children","child","cloneElement","includes","UserSchema","Yup","shape","min","max","mobile","gender","languages","of","nullable","dob","address","languageOptions","initialValues","hobbies","UserForm","handleSubmit","maxWidth","ml","mr","borderWidth","p","pt","pb","rounded","Heading","size","textAlign","validationSchema","onSubmit","values","setSubmitting","payload","t","console","log","setTimeout","render","isSubmitting","setFieldTouched","Stack","spacing","component","dobOptions","Button","variantColor","FromDataModal","isOpen","onClose","data","Modal","Text","fontSize","JSON","stringify","StyledHomePage","div","gray","HomePage","useState","isModalVisible","setIsModalVisible","userData","setUserData","App","ThemeProvider","CSSReset","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0afe057e.chunk.js","sourcesContent":["import { theme } from \"@chakra-ui/core\";\n\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors\n  }\n};\n\nexport { customTheme };\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledHeader = styled.header`\n  nav {\n    display: flex;\n    flex: 1;\n    height: 60px;\n    padding: 0.5rem 5rem;\n    background: #ffffff;\n    box-shadow: 0 2px 8px #f0f1f2;\n\n    a {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      font-size: 1.2rem;\n      font-weight: bold;\n    }\n\n    .grow {\n      flex: 1;\n    }\n  }\n`;\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <nav>\n        <div className=\"nav__left\">\n          <a href=\"/\" aria-label=\"WhitePanda\">\n            IvyPods\n          </a>\n        </div>\n        <div className=\"grow\"></div>\n      </nav>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import Header from \"./Header\";\n\nexport default Header;\n","import Footer from \"./Footer\";\n\nexport default Footer;\n","import React from \"react\";\n\nconst Footer = () => <footer></footer>;\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input\n} from \"@chakra-ui/core\";\n\nconst CustomInput = ({\n  field,\n  form: { touched, errors },\n  required,\n  ...props\n}) => (\n  <FormControl\n    isRequired={required}\n    isInvalid={errors[field.name] && touched[field.name]}\n  >\n    <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n    <Input type=\"text\" {...field} {...props} />\n    <FormErrorMessage>{errors[field.name]}</FormErrorMessage>\n  </FormControl>\n);\n\nCustomInput.propTypes = {\n  required: PropTypes.bool,\n  label: PropTypes.string\n};\n\nexport default CustomInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  InputLeftAddon,\n  InputGroup\n} from \"@chakra-ui/core\";\n\nfunction isValidPhoneNumber(number) {\n  const isEmpty = number.length === 0;\n  const hasLenghtGreaterThanTen = number.length > 10;\n  const isNumeric = !isNaN(number);\n\n  return isEmpty ? true : hasLenghtGreaterThanTen ? false : isNumeric;\n}\n\nconst PhoneNumberInput = ({\n  field,\n  form: { touched, errors, setFieldValue },\n  required,\n  ...props\n}) => (\n  <FormControl\n    isRequired={required}\n    isInvalid={errors[field.name] && touched[field.name]}\n  >\n    <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n    <InputGroup>\n      <InputLeftAddon children=\"+91\" />\n      <Input\n        type=\"phone\"\n        {...field}\n        {...props}\n        onChange={({ target: { value } }) => {\n          if (isValidPhoneNumber(value)) setFieldValue(field.name, value);\n        }}\n      />\n    </InputGroup>\n    <FormErrorMessage mt={0}>{errors[field.name]}</FormErrorMessage>\n  </FormControl>\n);\n\nPhoneNumberInput.propTypes = {\n  required: PropTypes.bool,\n  label: PropTypes.string\n};\nexport default PhoneNumberInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, FormLabel, FormErrorMessage } from \"@chakra-ui/core\";\nimport Select from \"react-select\";\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    borderColor: \"#e53e3e\",\n    boxShadow: \"0 0 0 1px #e53e3e\",\n    borderRadius: \"0.25rem\"\n  })\n};\n\nconst CustomSelect = ({\n  error,\n  touched,\n  options,\n  value,\n  label,\n  name,\n  onChange,\n  onBlur,\n  isMulti,\n  required\n}) => (\n  <FormControl mb={2} isRequired={required} isInvalid={!!error && touched}>\n    <FormLabel as=\"legend\">{label}</FormLabel>\n    <Select\n      styles={!!error && touched ? customStyles : undefined}\n      options={options}\n      isMulti={isMulti}\n      onChange={value => onChange(name, value)}\n      onBlur={() => onBlur(name, true)}\n      value={value}\n    />\n    <FormErrorMessage>{error}</FormErrorMessage>\n  </FormControl>\n);\n\nCustomSelect.propTypes = {\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  options: PropTypes.array,\n  isMulti: PropTypes.bool\n};\nexport default CustomSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Grid,\n  Box\n} from \"@chakra-ui/core\";\nimport Select from \"react-select\";\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    borderColor: \"#e53e3e\",\n    boxShadow: \"0 0 0 1px #e53e3e\",\n    borderRadius: \"0.25rem\"\n  })\n};\n\nconst DOBField = ({\n  error,\n  touched,\n  options,\n  value,\n  label,\n  name,\n  onChange,\n  onBlur,\n  required\n}) => (\n  <FormControl isRequired={required} mb={2} isInvalid={!!error && touched}>\n    <FormLabel as=\"legend\">{label}</FormLabel>\n    <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n      <Box w=\"100%\">\n        <Select\n          styles={!!error && touched && !value.day ? customStyles : undefined}\n          placeholder=\"Day\"\n          options={options.days}\n          onChange={value => onChange(`${name}.day`, value)}\n          onBlur={() => onBlur(`${name}.day`, true)}\n          value={value.day}\n        />\n      </Box>\n      <Box w=\"100%\">\n        <Select\n          styles={!!error && touched && value.day ? customStyles : undefined}\n          isDisabled={!value.day}\n          placeholder=\"Month\"\n          options={options.months}\n          onChange={value => onChange(`${name}.month`, value)}\n          onBlur={() => onBlur(`${name}.month`, true)}\n          value={value.month}\n        />\n      </Box>\n      <Box w=\"100%\">\n        <Select\n          styles={\n            !!error && touched && value.day && value.month\n              ? customStyles\n              : undefined\n          }\n          isDisabled={!value.day || !value.month}\n          placeholder=\"Year\"\n          options={options.years}\n          onChange={value => onChange(`${name}.year`, value)}\n          onBlur={() => onBlur(`${name}.year`, true)}\n          value={value.year}\n        />\n      </Box>\n    </Grid>\n\n    <FormErrorMessage>{error && \"Required\"}</FormErrorMessage>\n  </FormControl>\n);\n\nDOBField.propTypes = {\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  options: PropTypes.object\n};\n\nexport default DOBField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, FormLabel, FormErrorMessage } from \"@chakra-ui/core\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport Select from \"react-select\";\n\nfunction getSelectOptions(suggestions) {\n  return suggestions.map(({ description }) => ({\n    label: description,\n    value: description\n  }));\n}\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    borderColor: \"#e53e3e\",\n    boxShadow: \"0 0 0 1px #e53e3e\",\n    borderRadius: \"0.25rem\"\n  })\n};\n\nexport default class PlacesSelect extends React.Component {\n  state = { inputValue: \"\" };\n\n  handleChange = inputValue => {\n    this.setState({ inputValue });\n  };\n\n  render() {\n    const {\n      error,\n      touched,\n      value,\n      label,\n      name,\n      onChange,\n      onBlur,\n      required\n    } = this.props;\n    return (\n      <FormControl isRequired={required} isInvalid={!!error && touched}>\n        <FormLabel as=\"legend\">{label}</FormLabel>\n        <PlacesAutocomplete\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n        >\n          {({ getInputProps, suggestions, loading }) => (\n            <Select\n              styles={!!error && touched ? customStyles : undefined}\n              placeholder=\"Type your city name...\"\n              isClearable\n              isLoading={loading}\n              onInputChange={value =>\n                getInputProps().onChange({ target: { value } })\n              }\n              value={value}\n              onChange={value => onChange(name, value)}\n              onBlur={() => onBlur(name, true)}\n              options={getSelectOptions(suggestions)}\n            />\n          )}\n        </PlacesAutocomplete>\n        <FormErrorMessage>{error && \"Required\"}</FormErrorMessage>\n      </FormControl>\n    );\n  }\n}\n\nPlacesAutocomplete.propTypes = {\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  options: PropTypes.array\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Radio,\n  Box,\n  Flex\n} from \"@chakra-ui/core\";\n\nconst RadioButton = ({ field, id, label, ...props }) => {\n  return (\n    <Box pr={4}>\n      <Radio {...field} {...props} id={id} value={id}>\n        {label}\n      </Radio>\n    </Box>\n  );\n};\n\nRadioButton.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string\n};\n\nconst RadioButtonGroup = ({ error, touched, label, children, required }) => {\n  return (\n    <FormControl mb={2} isRequired={required} isInvalid={error && touched}>\n      <FormLabel as=\"legend\">{label}</FormLabel>\n      <Flex>{children}</Flex>\n      <FormErrorMessage>{error}</FormErrorMessage>\n    </FormControl>\n  );\n};\n\nRadioButtonGroup.propTypes = {\n  required: PropTypes.bool,\n  label: PropTypes.string\n};\n\nexport { RadioButton, RadioButtonGroup };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Checkbox,\n  Flex,\n  Box\n} from \"@chakra-ui/core\";\n\nconst CustomCheckbox = ({ field, id, label, ...props }) => {\n  return (\n    <Box pr={4}>\n      <Checkbox {...field} {...props} id={id} value={id}>\n        {label}\n      </Checkbox>\n    </Box>\n  );\n};\n\nCustomCheckbox.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string\n};\n\n// Checkbox group\nclass CustomCheckboxGroup extends React.Component {\n  handleChange = event => {\n    const target = event.currentTarget;\n    let valueArray = [...this.props.value] || [];\n\n    if (target.checked) {\n      valueArray.push(target.id);\n    } else {\n      valueArray.splice(valueArray.indexOf(target.id), 1);\n    }\n\n    this.props.onChange(this.props.id, valueArray);\n  };\n\n  handleBlur = () => {\n    // take care of touched\n    this.props.onBlur(this.props.id, true);\n  };\n\n  render() {\n    const { value, error, touched, label, children } = this.props;\n    return (\n      <FormControl mb={2} isInvalid={error && touched}>\n        <FormLabel as=\"legend\">{label}</FormLabel>\n        <Flex>\n          {React.Children.map(children, child => {\n            return React.cloneElement(child, {\n              field: {\n                value: value.includes(child.props.id),\n                onChange: this.handleChange,\n                onBlur: this.handleBlur\n              }\n            });\n          })}\n        </Flex>\n        <FormErrorMessage>{error}</FormErrorMessage>\n      </FormControl>\n    );\n  }\n}\n\nCustomCheckboxGroup.propTypes = {\n  value: PropTypes.array,\n  error: PropTypes.string,\n  touched: PropTypes.bool,\n  label: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport { CustomCheckbox as Checkbox, CustomCheckboxGroup as CheckboxGroup };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Stack, Button, Box, Heading } from \"@chakra-ui/core\";\nimport {\n  CustomInput,\n  PhoneNumberInput,\n  RadioButtonGroup,\n  RadioButton,\n  CheckboxGroup,\n  Checkbox,\n  CustomSelect,\n  DOBField,\n  PlacesSelect\n} from \"../../components/Form\";\nimport dobOptions from \"./data/dobOptions.json\";\n\nconst UserSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(100, \"Too Long!\")\n    .required(\"Required\"),\n  mobile: Yup.string()\n    .length(10, \"Mobile Number should have 10 digits\")\n    .required(\"Required\"),\n  gender: Yup.string().required(\"Required!\"),\n  languages: Yup.array()\n    .min(1, \"Pick at least 1 language\")\n    .of(\n      Yup.object().shape({\n        label: Yup.string().required(),\n        value: Yup.string().required()\n      })\n    )\n    .nullable(),\n  dob: Yup.object()\n    .shape({\n      day: Yup.string().required(),\n      month: Yup.string().required(),\n      year: Yup.string().required()\n    })\n    .required(\"Required\"),\n  address: Yup.object()\n    .shape({\n      label: Yup.string().required(),\n      value: Yup.string().required()\n    })\n    .required(\"Required\")\n});\n\nconst languageOptions = [\n  { value: \"English\", label: \"English\" },\n  { value: \"French\", label: \"French\" },\n  { value: \"Japanese\", label: \"Japanese\" }\n];\n\nconst initialValues = {\n  name: \"\",\n  mobile: \"\",\n  gender: \"\",\n  hobbies: [],\n  languages: [],\n  dob: {\n    day: \"\",\n    month: \"\",\n    year: \"\"\n  },\n  address: \"\"\n};\n\nconst UserForm = ({ handleSubmit }) => {\n  return (\n    <Box\n      maxWidth={1000}\n      ml=\"auto\"\n      mr=\"auto\"\n      borderWidth=\"1px\"\n      p={6}\n      pt={2}\n      pb={2}\n      rounded=\"lg\"\n    >\n      <Heading mb={4} as=\"h1\" size=\"xl\" textAlign=\"center\">\n        Registration Form\n      </Heading>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          const payload = {\n            ...values,\n            languages: values.languages.map(t => t.value),\n            dob: `${values.dob.day.value}/${values.dob.month.value}/${values.dob.year.value}`,\n            address: values.address.value\n          };\n\n          console.log(\"payload\", payload);\n\n          setTimeout(() => {\n            handleSubmit(payload);\n            setSubmitting(false);\n          }, 1000);\n        }}\n        render={({\n          isSubmitting,\n          values,\n          touched,\n          errors,\n          setFieldValue,\n          setFieldTouched\n        }) => (\n          <Form>\n            <Stack spacing={3}>\n              <Field\n                required\n                name=\"name\"\n                label=\"Name\"\n                placeholder=\"John Doe\"\n                component={CustomInput}\n              />\n              <Field\n                required\n                name=\"mobile\"\n                label=\"Mobile No\"\n                component={PhoneNumberInput}\n              />\n              <RadioButtonGroup\n                id=\"gender\"\n                label=\"Gender\"\n                value={values.gender}\n                error={errors.gender}\n                touched={touched.gender}\n                required\n              >\n                <Field\n                  component={RadioButton}\n                  name=\"gender\"\n                  id=\"male\"\n                  label=\"Male\"\n                />\n                <Field\n                  component={RadioButton}\n                  name=\"gender\"\n                  id=\"female\"\n                  label=\"Female\"\n                />\n                <Field\n                  component={RadioButton}\n                  name=\"gender\"\n                  id=\"other\"\n                  label=\"Other\"\n                />\n              </RadioButtonGroup>\n              <CheckboxGroup\n                id=\"hobbies\"\n                label=\"Hobbies\"\n                value={values.hobbies}\n                error={errors.hobbies}\n                touched={touched.hobbies}\n                onChange={setFieldValue}\n                onBlur={setFieldTouched}\n              >\n                <Field\n                  component={Checkbox}\n                  name=\"hobbies\"\n                  id=\"writing\"\n                  label=\"Writing\"\n                />\n                <Field\n                  component={Checkbox}\n                  name=\"hobbies\"\n                  id=\"cooking\"\n                  label=\"Cooking\"\n                />\n                <Field\n                  component={Checkbox}\n                  name=\"hobbies\"\n                  id=\"painting\"\n                  label=\"Painting\"\n                />\n              </CheckboxGroup>\n              <CustomSelect\n                isMulti\n                name=\"languages\"\n                label=\"Select Languages\"\n                options={languageOptions}\n                value={values.languages}\n                onChange={setFieldValue}\n                onBlur={setFieldTouched}\n                error={errors.languages}\n                touched={touched.languages}\n                required\n              />\n              <DOBField\n                name=\"dob\"\n                label=\"Date of Birth\"\n                options={dobOptions}\n                value={values.dob}\n                onChange={setFieldValue}\n                onBlur={setFieldTouched}\n                error={errors.dob}\n                touched={touched.dob}\n                required\n              />\n              <PlacesSelect\n                name=\"address\"\n                label=\"Address\"\n                value={values.address}\n                onChange={setFieldValue}\n                onBlur={setFieldTouched}\n                error={errors.address}\n                touched={touched.address}\n                required\n              />\n            </Stack>\n\n            <Button\n              mt={4}\n              variantColor=\"teal\"\n              isLoading={isSubmitting}\n              type=\"submit\"\n              size=\"lg\"\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      />\n    </Box>\n  );\n};\n\nexport default UserForm;\n\nUserForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Text\n} from \"@chakra-ui/core\";\n\nconst FromDataModal = ({ isOpen, onClose, data }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>User Data</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text fontSize=\"md\">\n            <pre>{JSON.stringify(data, null, 2)}</pre>\n          </Text>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default FromDataModal;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport UserForm from \"./UserForm\";\nimport FromDataModal from \"./data/FromDataModal\";\n\nconst StyledHomePage = styled.div`\n  section.main {\n    background: ${props => props.theme.colors.gray[\"50\"]};\n    padding-bottom: 2rem;\n    main {\n      padding: 4rem 5rem;\n    }\n  }\n`;\n\nconst HomePage = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [userData, setUserData] = useState({});\n  return (\n    <StyledHomePage>\n      <Header />\n      <section className=\"main\">\n        <main>\n          <UserForm\n            handleSubmit={data => {\n              setUserData(data);\n              setIsModalVisible(true);\n            }}\n          />\n        </main>\n        <FromDataModal\n          data={userData}\n          isOpen={isModalVisible}\n          onClose={() => setIsModalVisible(false)}\n        />\n      </section>\n      <Footer />\n    </StyledHomePage>\n  );\n};\n\nexport default HomePage;\n","import HomePage from \"./HomePage\";\n\nexport default HomePage;\n","import React from \"react\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { customTheme } from \"./styles/theme\";\nimport HomePage from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <CSSReset />\n      <HomePage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}